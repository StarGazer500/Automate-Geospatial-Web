# Generated by Django 5.1.7 on 2025-05-02 08:32

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceQc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('what_type_of_qc_are_you_performing_field', models.TextField(blank=True, db_column='What type of QC are you performing?', null=True)),
                ('qc_attempt', models.FloatField(blank=True, db_column='QC Attempt', null=True)),
                ('date_of_qc', models.DateField(blank=True, db_column='Date of QC', null=True)),
                ('works_order_number', models.FloatField(blank=True, db_column='Works Order Number', null=True)),
                ('calculation', models.TextField(blank=True, null=True)),
                ('forester', models.TextField(blank=True, db_column='Forester', null=True)),
                ('supervisor', models.TextField(blank=True, db_column='Supervisor', null=True)),
                ('team_name', models.TextField(blank=True, db_column='Team Name', null=True)),
                ('team_leader', models.TextField(blank=True, db_column='Team Leader', null=True)),
                ('team_type', models.TextField(blank=True, db_column='Team Type', null=True)),
                ('forest_reserve', models.TextField(blank=True, db_column='Forest Reserve', null=True)),
                ('compartment_id', models.TextField(blank=True, db_column='Compartment ID', null=True)),
                ('activity', models.TextField(blank=True, db_column='Activity', null=True)),
                ('start_date_of_activity', models.DateField(blank=True, db_column='Start Date of Activity', null=True)),
                ('end_date_of_activity', models.DateField(blank=True, db_column='End Date of Activity', null=True)),
                ('work_quantity_ha', models.FloatField(blank=True, db_column='Work Quantity, Ha', null=True)),
                ('land_cover', models.TextField(blank=True, db_column='Land Cover', null=True)),
                ('spacing_sph_width', models.FloatField(blank=True, db_column='Spacing (SPH) - Width', null=True)),
                ('spacing_sph_length', models.FloatField(blank=True, db_column='Spacing (SPH) - Length', null=True)),
                ('qc_reporter', models.TextField(blank=True, db_column='QC Reporter', null=True)),
                ('qc_plot_id', models.TextField(blank=True, db_column='QC Plot ID', null=True)),
                ('calculation_001', models.TextField(blank=True, null=True)),
                ('coordinate', models.TextField(blank=True, db_column='Coordinate', null=True)),
                ('field_coordinate_latitude', models.FloatField(blank=True, db_column='_Coordinate_latitude', null=True)),
                ('field_coordinate_longitude', models.FloatField(blank=True, db_column='_Coordinate_longitude', null=True)),
                ('field_coordinate_altitude', models.FloatField(blank=True, db_column='_Coordinate_altitude', null=True)),
                ('field_coordinate_precision', models.FloatField(blank=True, db_column='_Coordinate_precision', null=True)),
                ('slash_height_of_weeds_15cm', models.TextField(blank=True, db_column='Slash height of weeds < 15cm', null=True)),
                ('number_of_planted_trees', models.BigIntegerField(blank=True, db_column='Number of planted trees', null=True)),
                ('number_of_alive_planted_trees', models.FloatField(blank=True, db_column='Number of alive planted trees', null=True)),
                ('number_of_dead_planted_trees', models.FloatField(blank=True, db_column='Number of dead planted trees', null=True)),
                ('number_of_missing_trees', models.FloatField(blank=True, db_column='Number of missing trees', null=True)),
                ('planted_trees_slashed', models.FloatField(blank=True, db_column='Planted trees - Slashed', null=True)),
                ('planted_trees_damaged', models.FloatField(blank=True, db_column='Planted trees - Damaged', null=True)),
                ('circles_not_meeting_0_5m_radius', models.FloatField(blank=True, db_column='Circles not meeting 0.5m radius', null=True)),
                ('soil_disturbance_planted_trees', models.FloatField(blank=True, db_column='Soil disturbance - Planted trees', null=True)),
                ('weeds_within_0_5m_radius_circle', models.FloatField(blank=True, db_column='Weeds within 0.5m radius circle', null=True)),
                ('trees_not_planted_with_dbh_5cm', models.FloatField(blank=True, db_column='Trees (not planted) with DBH > 5cm', null=True)),
                ('slashed_trees_not_planted_with_dbh_5cm', models.FloatField(blank=True, db_column='Slashed trees (not planted) with DBH > 5cm', null=True)),
                ('line_clearing_2m_width_conformance', models.TextField(blank=True, db_column='Line Clearing 2m width Conformance', null=True)),
                ('native_trees_dbh_15cm_with_vines_climbers_fully_cleared', models.FloatField(blank=True, db_column='Native trees (DBH > 15cm) with vines/climbers fully cleared', null=True)),
                ('native_trees_dbh_15cm_with_incomplete_vine_climbers_clearan', models.FloatField(blank=True, db_column='Native trees (DBH > 15cm) with incomplete vine/climbers clearan', null=True)),
                ('invasive_species_unslashed_stems_dbh_15cm_field', models.FloatField(blank=True, db_column='Invasive Species - Unslashed stems (DBH<15cm)', null=True)),
                ('spot_spray_completeness', models.TextField(blank=True, db_column='Spot Spray Completeness', null=True)),
                ('number_of_circle_sprayed_trees', models.FloatField(blank=True, db_column='Number of circle sprayed trees', null=True)),
                ('number_of_circle_sprayed_trees_with_green_patches_or_weed_growt', models.FloatField(blank=True, db_column='Number of circle sprayed trees with green patches or weed growt', null=True)),
                ('number_of_planted_trees_dead_due_to_chemical', models.FloatField(blank=True, db_column='Number of planted trees dead due to chemical', null=True)),
                ('number_of_chemical_stressed_trees', models.FloatField(blank=True, db_column='Number of chemical stressed trees', null=True)),
                ('number_of_invasive_woody_species', models.FloatField(blank=True, db_column='Number of invasive woody species', null=True)),
                ('number_of_spot_sprayed_woody_species', models.FloatField(blank=True, db_column='Number of spot sprayed woody species', null=True)),
                ('damage_to_non_target_species_number_of_unplanted_trees_dead_du', models.FloatField(blank=True, db_column='Damage to Non-Target Species (Number of unplanted trees dead du', null=True)),
                ('planted_species_1', models.TextField(blank=True, db_column='Planted Species 1', null=True)),
                ('species_1_count', models.FloatField(blank=True, db_column='Species 1 Count', null=True)),
                ('planted_species_2', models.TextField(blank=True, db_column='Planted Species 2', null=True)),
                ('species_2_count', models.FloatField(blank=True, db_column='Species 2 Count', null=True)),
                ('planted_species_3', models.TextField(blank=True, db_column='Planted Species 3', null=True)),
                ('species_3_count', models.FloatField(blank=True, db_column='Species 3 Count', null=True)),
                ('planted_species_4', models.TextField(blank=True, db_column='Planted Species 4', null=True)),
                ('species_4_count', models.FloatField(blank=True, db_column='Species 4 Count', null=True)),
                ('planted_species_5', models.TextField(blank=True, db_column='Planted Species 5', null=True)),
                ('species_5_count', models.FloatField(blank=True, db_column='Species 5 Count', null=True)),
                ('planted_species_6', models.TextField(blank=True, db_column='Planted Species 6', null=True)),
                ('species_6_count', models.FloatField(blank=True, db_column='Species 6 Count', null=True)),
                ('planted_species_7', models.TextField(blank=True, db_column='Planted Species 7', null=True)),
                ('species_7_count', models.FloatField(blank=True, db_column='Species 7 Count', null=True)),
                ('planted_species_8', models.TextField(blank=True, db_column='Planted Species 8', null=True)),
                ('species_8_count', models.FloatField(blank=True, db_column='Species 8 Count', null=True)),
                ('planted_species_9', models.TextField(blank=True, db_column='Planted Species 9', null=True)),
                ('species_9_count', models.FloatField(blank=True, db_column='Species 9 Count', null=True)),
                ('planted_species_10', models.TextField(blank=True, db_column='Planted Species 10', null=True)),
                ('species_count_10', models.FloatField(blank=True, db_column='Species Count 10', null=True)),
                ('correct_species_mix', models.TextField(blank=True, db_column='Correct species mix', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('photo_east', models.TextField(blank=True, db_column='Photo East', null=True)),
                ('photo_east_url', models.TextField(blank=True, db_column='Photo East_URL', null=True)),
                ('photo_west', models.TextField(blank=True, db_column='Photo West', null=True)),
                ('photo_west_url', models.TextField(blank=True, db_column='Photo West_URL', null=True)),
                ('photo_south', models.TextField(blank=True, db_column='Photo South', null=True)),
                ('photo_south_url', models.TextField(blank=True, db_column='Photo South_URL', null=True)),
                ('photo_north', models.TextField(blank=True, db_column='Photo North', null=True)),
                ('photo_north_url', models.TextField(blank=True, db_column='Photo North_URL', null=True)),
                ('start_date_of_maintenance', models.DateTimeField(blank=True, db_column='Start Date of Maintenance', null=True)),
                ('date_of_maintenance', models.DateField(blank=True, db_column='Date of Maintenance', null=True)),
                ('date_of_planting', models.DateTimeField(blank=True, db_column='Date of Planting', null=True)),
                ('end_date_of_maintenance', models.DateTimeField(blank=True, db_column='End Date of Maintenance', null=True)),
                ('area_qced_ha', models.FloatField(blank=True, db_column='Area QCed, Ha', null=True)),
                ('spacing_sph_field', models.TextField(blank=True, db_column='Spacing (SPH)', null=True)),
                ('spacing_sph_1', models.TextField(blank=True, db_column='Spacing (SPH).1', null=True)),
                ('date_planted', models.TextField(blank=True, db_column='Date Planted', null=True)),
                ('all_weeds_treated', models.FloatField(blank=True, db_column='All Weeds Treated', null=True)),
                ('herbicide_effectivity', models.FloatField(blank=True, db_column='Herbicide Effectivity', null=True)),
                ('number_of_planted_trees_with_fertilizer_applied', models.FloatField(blank=True, db_column='Number of Planted trees with fertilizer applied', null=True)),
                ('number_of_planted_trees_with_fertilizer_applied_15cm_from_tree', models.FloatField(blank=True, db_column='Number of Planted trees with fertilizer applied 15cm from tree', null=True)),
                ('number_of_planted_trees_with_fertilizer_scorched_leaves', models.FloatField(blank=True, db_column='Number of Planted trees with fertilizer scorched leaves', null=True)),
                ('number_of_planted_trees_with_covered_fertilizers', models.FloatField(blank=True, db_column='Number of Planted trees with covered fertilizers', null=True)),
                ('general_slots_placement', models.TextField(blank=True, db_column='General Slots Placement', null=True)),
                ('field_id', models.BigIntegerField(blank=True, db_column='_id', null=True)),
                ('field_uuid', models.TextField(blank=True, db_column='_uuid', null=True)),
                ('field_submission_time', models.DateTimeField(blank=True, db_column='_submission_time', null=True)),
                ('field_validation_status', models.TextField(blank=True, db_column='_validation_status', null=True)),
                ('field_notes', models.FloatField(blank=True, db_column='_notes', null=True)),
                ('field_status', models.TextField(blank=True, db_column='_status', null=True)),
                ('field_submitted_by', models.TextField(blank=True, db_column='_submitted_by', null=True)),
                ('field_version_field', models.TextField(blank=True, db_column='__version__', null=True)),
                ('field_tags', models.FloatField(blank=True, db_column='_tags', null=True)),
                ('field_index', models.BigIntegerField(blank=True, db_column='_index', null=True)),
                ('surviving_trees', models.FloatField(blank=True, db_column='Surviving Trees', null=True)),
                ('vine_clearance_completeness', models.FloatField(blank=True, null=True)),
                ('percentage_spraying_completeness', models.FloatField(blank=True, null=True)),
                ('circle_sprayed_trees_with_green_patches_or_weed_growth_quality', models.FloatField(blank=True, null=True)),
                ('damage_to_non_target_species_quality', models.FloatField(blank=True, null=True)),
                ('chemical_weeding_accuracy', models.FloatField(blank=True, null=True)),
                ('chemical_weeding_accuracy_pass_or_fail', models.TextField(blank=True, null=True)),
                ('slashed_tree_preservation_accuracy_planted_trees_field', models.FloatField(blank=True, db_column='Slashed Tree Preservation Accuracy - Planted Trees (%)', null=True)),
                ('slash_height_accuracy_field', models.FloatField(blank=True, db_column='Slash Height Accuracy (%)', null=True)),
                ('maintenance_slashing_accuracy_field', models.FloatField(blank=True, db_column='Maintenance Slashing Accuracy (%)', null=True)),
                ('maintenance_slashing_accuracy_pass_fail_field', models.TextField(blank=True, db_column='Maintenance Slashing Accuracy (Pass/Fail)', null=True)),
                ('ring_weeded_tree_preservation_accuracy_planted_trees_field', models.FloatField(blank=True, db_column='Ring weeded Tree Preservation Accuracy - Planted Trees (%)', null=True)),
                ('number_0_5m_radius_accuracy_field', models.FloatField(blank=True, db_column='0.5m radius Accuracy (%)', null=True)),
                ('soil_disturbance_accuracy_field', models.FloatField(blank=True, db_column='Soil Disturbance Accuracy (%)', null=True)),
                ('weeds_control_accuracy_field', models.FloatField(blank=True, db_column='Weeds Control Accuracy (%)', null=True)),
                ('ring_weeding_accuracy_field', models.FloatField(blank=True, db_column='Ring Weeding Accuracy (%)', null=True)),
                ('ring_weeding_pass_fail_field', models.TextField(blank=True, db_column='Ring Weeding (Pass/Fail)', null=True)),
                ('maintenance_qc_result_field', models.FloatField(blank=True, db_column='Maintenance QC Result (%)', null=True)),
                ('maintenance_qc_result_pass_or_fail', models.TextField(blank=True, db_column='Maintenance QC Result (%) Pass or Fail', null=True)),
                ('survival_field', models.FloatField(blank=True, db_column='Survival %', null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'maintenance_qc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempMaintenanceQc',
            fields=[
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('what_type_of_qc_are_you_performing_field', models.CharField(blank=True, db_column='What type of QC are you performing?', max_length=255, null=True)),
                ('date_of_qc', models.DateField(blank=True, db_column='Date of QC', null=True)),
                ('start_date_of_activity', models.DateField(blank=True, db_column='Start Date of Activity', null=True)),
                ('end_date_of_activity', models.DateField(blank=True, db_column='End Date of Activity', null=True)),
                ('works_order_number', models.CharField(blank=True, db_column='Works Order Number', null=True)),
                ('forester', models.CharField(blank=True, db_column='Forester', null=True)),
                ('supervisor', models.CharField(blank=True, db_column='Supervisor', null=True)),
                ('team_type', models.CharField(blank=True, db_column='Team Type', null=True)),
                ('team_leader', models.CharField(blank=True, db_column='Team Leader', null=True)),
                ('team', models.CharField(blank=True, db_column='Team', null=True)),
                ('compartment_id', models.CharField(blank=True, db_column='Compartment ID', null=True)),
                ('activity', models.CharField(blank=True, db_column='Activity', null=True)),
                ('work_quantity_ha', models.FloatField(blank=True, db_column='Work Quantity, Ha', null=True)),
                ('area_qced_ha', models.FloatField(blank=True, db_column='Area QCed, Ha', null=True)),
                ('land_cover', models.CharField(blank=True, db_column='Land Cover', null=True)),
                ('spacing_sph_width', models.CharField(blank=True, db_column='Spacing (SPH) - Width', null=True)),
                ('spacing_sph_length', models.CharField(blank=True, db_column='Spacing (SPH) - Length', null=True)),
                ('qc_reporter', models.CharField(blank=True, db_column='QC Reporter', null=True)),
                ('qc_plot_id', models.CharField(blank=True, db_column='QC Plot ID', null=True)),
                ('coordinate', models.CharField(blank=True, db_column='Coordinate', null=True)),
                ('field_coordinate_latitude', models.FloatField(blank=True, db_column='_Coordinate_latitude', null=True)),
                ('field_coordinate_longitude', models.FloatField(blank=True, db_column='_Coordinate_longitude', null=True)),
                ('field_coordinate_altitude', models.FloatField(blank=True, db_column='_Coordinate_altitude', null=True)),
                ('field_coordinate_precision', models.FloatField(blank=True, db_column='_Coordinate_precision', null=True)),
                ('slash_height_of_weeds_15cm', models.CharField(blank=True, db_column='Slash height of weeds < 15cm', null=True)),
                ('number_of_planted_trees', models.IntegerField(blank=True, db_column='Number of planted trees', null=True)),
                ('number_of_dead_planted_trees', models.IntegerField(blank=True, db_column='Number of dead planted trees', null=True)),
                ('planted_trees_slashed', models.FloatField(blank=True, db_column='Planted trees - Slashed', null=True)),
                ('planted_trees_damaged', models.FloatField(blank=True, db_column='Planted trees - Damaged', null=True)),
                ('circles_not_meeting_0_5m_radius', models.FloatField(blank=True, db_column='Circles not meeting 0.5m radius', null=True)),
                ('soil_disturbance_planted_trees', models.FloatField(blank=True, db_column='Soil disturbance - Planted trees', null=True)),
                ('weeds_within_0_5m_radius_circle', models.FloatField(blank=True, db_column='Weeds within 0.5m radius circle', null=True)),
                ('trees_not_planted_with_dbh_5cm', models.FloatField(blank=True, db_column='Trees (not planted) with DBH > 5cm', null=True)),
                ('slashed_trees_not_planted_with_dbh_5cm', models.FloatField(blank=True, db_column='Slashed trees (not planted) with DBH > 5cm', null=True)),
                ('line_clearing_2m_width_conformance', models.FloatField(blank=True, db_column='Line Clearing 2m width Conformance', null=True)),
                ('native_trees_dbh_15cm_with_vines_climbers_fully_cleared', models.FloatField(blank=True, db_column='Native trees (DBH > 15cm) with vines/climbers fully cleared', null=True)),
                ('native_trees_dbh_15cm_with_incomplete_vine_climbers_clearan', models.FloatField(blank=True, db_column='Native trees (DBH > 15cm) with incomplete vine/climbers clearan', null=True)),
                ('invasive_species_unslashed_stems_dbh_15cm_field', models.FloatField(blank=True, db_column='Invasive Species - Unslashed stems (DBH<15cm)', null=True)),
                ('number_of_circle_sprayed_trees', models.IntegerField(blank=True, db_column='Number of circle sprayed trees', null=True)),
                ('number_of_circle_sprayed_trees_with_green_patches_or_weed_growt', models.IntegerField(blank=True, db_column='Number of circle sprayed trees with green patches or weed growt', null=True)),
                ('number_of_planted_trees_dead_due_to_chemical', models.IntegerField(blank=True, db_column='Number of planted trees dead due to chemical', null=True)),
                ('number_of_chemical_stressed_trees', models.IntegerField(blank=True, db_column='Number of chemical stressed trees', null=True)),
                ('damage_to_non_target_species_number_of_unplanted_trees_dead_du', models.IntegerField(blank=True, db_column='Damage to Non-Target Species (Number of unplanted trees dead du', null=True)),
                ('planted_species_1', models.CharField(blank=True, db_column='Planted Species 1', null=True)),
                ('species_1_count', models.FloatField(blank=True, db_column='Species 1 Count', null=True)),
                ('planted_species_2', models.CharField(blank=True, db_column='Planted Species 2', null=True)),
                ('species_2_count', models.FloatField(blank=True, db_column='Species 2 Count', null=True)),
                ('planted_species_3', models.CharField(blank=True, db_column='Planted Species 3', null=True)),
                ('species_3_count', models.FloatField(blank=True, db_column='Species 3 Count', null=True)),
                ('planted_species_4', models.CharField(blank=True, db_column='Planted Species 4', null=True)),
                ('species_4_count', models.FloatField(blank=True, db_column='Species 4 Count', null=True)),
                ('planted_species_5', models.CharField(blank=True, db_column='Planted Species 5', null=True)),
                ('species_5_count', models.FloatField(blank=True, db_column='Species 5 Count', null=True)),
                ('planted_species_6', models.CharField(blank=True, db_column='Planted Species 6', null=True)),
                ('species_6_count', models.FloatField(blank=True, db_column='Species 6 Count', null=True)),
                ('correct_species_mix', models.CharField(blank=True, db_column='Correct species mix', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('photo_east', models.CharField(blank=True, db_column='Photo East', null=True)),
                ('photo_east_url', models.CharField(blank=True, db_column='Photo East_URL', null=True)),
                ('photo_west', models.CharField(blank=True, db_column='Photo West', null=True)),
                ('photo_west_url', models.CharField(blank=True, db_column='Photo West_URL', null=True)),
                ('photo_south', models.CharField(blank=True, db_column='Photo South', null=True)),
                ('photo_south_url', models.CharField(blank=True, db_column='Photo South_URL', null=True)),
                ('photo_north', models.CharField(blank=True, db_column='Photo North', null=True)),
                ('photo_north_url', models.CharField(blank=True, db_column='Photo North_URL', null=True)),
                ('start_date_of_maintenance', models.DateField(blank=True, db_column='Start Date of Maintenance', null=True)),
                ('date_of_maintenance', models.DateField(blank=True, db_column='Date of Maintenance', null=True)),
                ('date_of_planting', models.DateField(blank=True, db_column='Date of Planting', null=True)),
                ('end_date_of_maintenance', models.DateField(blank=True, db_column='End Date of Maintenance', null=True)),
                ('field_id', models.BigIntegerField(db_column='_id', primary_key=True, serialize=False)),
                ('field_uuid', models.UUIDField(blank=True, db_column='_uuid', null=True, unique=True)),
                ('field_submission_time', models.DateTimeField(blank=True, db_column='_submission_time', null=True)),
                ('field_validation_status', models.CharField(blank=True, db_column='_validation_status', null=True)),
                ('field_notes', models.TextField(blank=True, db_column='_notes', null=True)),
                ('field_status', models.CharField(blank=True, db_column='_status', null=True)),
                ('field_submitted_by', models.CharField(blank=True, db_column='_submitted_by', null=True)),
                ('field_version_field', models.CharField(blank=True, db_column='__version__', null=True)),
                ('field_tags', models.CharField(blank=True, db_column='_tags', null=True)),
                ('field_index', models.IntegerField(blank=True, db_column='_index', null=True)),
                ('surviving_trees', models.IntegerField(blank=True, db_column='Surviving Trees', null=True)),
                ('slashed_tree_preservation_accuracy_planted_trees_field', models.IntegerField(blank=True, db_column='Slashed Tree Preservation Accuracy - Planted Trees (%)', null=True)),
                ('slash_height_accuracy_field', models.IntegerField(blank=True, db_column='Slash Height Accuracy (%)', null=True)),
                ('maintenance_slashing_accuracy_field', models.IntegerField(blank=True, db_column='Maintenance Slashing Accuracy (%)', null=True)),
                ('maintenance_slashing_accuracy_pass_fail_field', models.CharField(blank=True, db_column='Maintenance Slashing Accuracy (Pass/Fail)', null=True)),
                ('ring_weeded_tree_preservation_accuracy_planted_trees_field', models.IntegerField(blank=True, db_column='Ring weeded Tree Preservation Accuracy - Planted Trees (%)', null=True)),
                ('number_0_5m_radius_accuracy_field', models.IntegerField(blank=True, db_column='0.5m radius Accuracy (%)', null=True)),
                ('soil_disturbance_accuracy_field', models.IntegerField(blank=True, db_column='Soil Disturbance Accuracy (%)', null=True)),
                ('weeds_control_accuracy_field', models.IntegerField(blank=True, db_column='Weeds Control Accuracy (%)', null=True)),
                ('ring_weeding_accuracy_field', models.IntegerField(blank=True, db_column='Ring Weeding Accuracy (%)', null=True)),
                ('ring_weeding_pass_fail_field', models.CharField(blank=True, db_column='Ring Weeding (Pass/Fail)', null=True)),
                ('maintenance_qc_result_field', models.IntegerField(blank=True, db_column='Maintenance QC Result (%)', null=True)),
                ('maintenance_qc_result_pass_or_fail', models.CharField(blank=True, db_column='Maintenance QC Result (%) Pass or Fail', null=True)),
                ('circle_sprayed_trees_with_green_patches_or_weed_growth_quality', models.IntegerField(blank=True, null=True)),
                ('planted_trees_dead_due_to_chemical_quality', models.IntegerField(blank=True, null=True)),
                ('number_of_chemical_stressed_trees_quality', models.IntegerField(blank=True, null=True)),
                ('damage_to_non_target_species_quality', models.IntegerField(blank=True, null=True)),
                ('chemical_weeding_accuracy', models.IntegerField(blank=True, null=True)),
                ('chemical_weeding_accuracy_pass_or_fail', models.CharField(blank=True, null=True)),
                ('percentage_spraying_completnesss', models.IntegerField(blank=True, null=True)),
                ('percentage_spraying_accuracy', models.IntegerField(blank=True, null=True)),
                ('percentage_planted_trees_preservation', models.IntegerField(blank=True, null=True)),
                ('percentage_chemical_stressed_trees', models.IntegerField(blank=True, null=True)),
                ('vine_clearance_completeness', models.IntegerField(blank=True, null=True)),
                ('tree_preservation', models.IntegerField(blank=True, null=True)),
                ('liana_cutting_establishment_accuracy', models.IntegerField(blank=True, null=True)),
                ('survival_field', models.IntegerField(blank=True, db_column='Survival %', null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('manually_modified', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'temp_maintenance_qc',
                'managed': False,
            },
        ),
    ]
