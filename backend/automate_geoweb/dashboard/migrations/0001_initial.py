# Generated by Django 5.1.7 on 2025-05-08 16:15

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceQc',
            fields=[
                ('id', models.BigIntegerField(db_column='_id', primary_key=True, serialize=False)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('what_type_of_qc_are_you_performing', models.TextField(blank=True, null=True)),
                ('qc_attempt', models.FloatField(blank=True, null=True)),
                ('date_of_qc', models.DateField(blank=True, null=True)),
                ('works_order_number', models.FloatField(blank=True, null=True)),
                ('calculation', models.TextField(blank=True, null=True)),
                ('forester', models.TextField(blank=True, null=True)),
                ('supervisor', models.TextField(blank=True, null=True)),
                ('team_name', models.TextField(blank=True, null=True)),
                ('team_leader', models.TextField(blank=True, null=True)),
                ('team_type', models.TextField(blank=True, null=True)),
                ('forest_reserve', models.TextField(blank=True, null=True)),
                ('compartment_id', models.TextField(blank=True, null=True)),
                ('activity', models.TextField(blank=True, null=True)),
                ('start_date_of_activity', models.DateField(blank=True, null=True)),
                ('end_date_of_activity', models.DateField(blank=True, null=True)),
                ('work_quantity_ha', models.FloatField(blank=True, null=True)),
                ('land_cover', models.TextField(blank=True, null=True)),
                ('spacing_sph_width', models.FloatField(blank=True, db_column='spacing_sph__width', null=True)),
                ('spacing_sph_length', models.FloatField(blank=True, db_column='spacing_sph__length', null=True)),
                ('qc_reporter', models.TextField(blank=True, null=True)),
                ('qc_plot_id', models.TextField(blank=True, null=True)),
                ('calculation_001', models.TextField(blank=True, null=True)),
                ('coordinate', models.TextField(blank=True, null=True)),
                ('field_coordinate_latitude', models.FloatField(blank=True, db_column='_coordinate_latitude', null=True)),
                ('field_coordinate_longitude', models.FloatField(blank=True, db_column='_coordinate_longitude', null=True)),
                ('field_coordinate_altitude', models.FloatField(blank=True, db_column='_coordinate_altitude', null=True)),
                ('field_coordinate_precision', models.FloatField(blank=True, db_column='_coordinate_precision', null=True)),
                ('slash_height_of_weeds_15cm', models.TextField(blank=True, db_column='slash_height_of_weeds__15cm', null=True)),
                ('number_of_planted_trees', models.BigIntegerField(blank=True, null=True)),
                ('number_of_alive_planted_trees', models.FloatField(blank=True, null=True)),
                ('number_of_dead_planted_trees', models.FloatField(blank=True, null=True)),
                ('number_of_missing_trees', models.FloatField(blank=True, null=True)),
                ('planted_trees_slashed', models.FloatField(blank=True, db_column='planted_trees__slashed', null=True)),
                ('planted_trees_damaged', models.FloatField(blank=True, db_column='planted_trees__damaged', null=True)),
                ('circles_not_meeting_05m_radius', models.FloatField(blank=True, null=True)),
                ('soil_disturbance_planted_trees', models.FloatField(blank=True, db_column='soil_disturbance__planted_trees', null=True)),
                ('weeds_within_05m_radius_circle', models.FloatField(blank=True, null=True)),
                ('trees_not_planted_with_dbh_5cm', models.FloatField(blank=True, db_column='trees_not_planted_with_dbh__5cm', null=True)),
                ('slashed_trees_not_planted_with_dbh_5cm', models.FloatField(blank=True, db_column='slashed_trees_not_planted_with_dbh__5cm', null=True)),
                ('line_clearing_2m_width_conformance', models.TextField(blank=True, null=True)),
                ('native_trees_dbh_15cm_with_vinesclimbers_fully_cleared', models.FloatField(blank=True, db_column='native_trees_dbh__15cm_with_vinesclimbers_fully_cleared', null=True)),
                ('native_trees_dbh_15cm_with_incomplete_vineclimbers_clearan', models.FloatField(blank=True, db_column='native_trees_dbh__15cm_with_incomplete_vineclimbers_clearan', null=True)),
                ('invasive_species_unslashed_stems_dbh15cm', models.FloatField(blank=True, db_column='invasive_species__unslashed_stems_dbh15cm', null=True)),
                ('spot_spray_completeness', models.TextField(blank=True, null=True)),
                ('number_of_circle_sprayed_trees', models.FloatField(blank=True, null=True)),
                ('number_of_circle_sprayed_trees_with_green_patches_or_weed_growt', models.FloatField(blank=True, null=True)),
                ('number_of_planted_trees_dead_due_to_chemical', models.FloatField(blank=True, null=True)),
                ('number_of_chemical_stressed_trees', models.FloatField(blank=True, null=True)),
                ('number_of_invasive_woody_species', models.FloatField(blank=True, null=True)),
                ('number_of_spot_sprayed_woody_species', models.FloatField(blank=True, null=True)),
                ('damage_to_nontarget_species_number_of_unplanted_trees_dead_du', models.FloatField(blank=True, null=True)),
                ('planted_species_1', models.TextField(blank=True, null=True)),
                ('species_1_count', models.FloatField(blank=True, null=True)),
                ('planted_species_2', models.TextField(blank=True, null=True)),
                ('species_2_count', models.FloatField(blank=True, null=True)),
                ('planted_species_3', models.TextField(blank=True, null=True)),
                ('species_3_count', models.FloatField(blank=True, null=True)),
                ('planted_species_4', models.TextField(blank=True, null=True)),
                ('species_4_count', models.FloatField(blank=True, null=True)),
                ('planted_species_5', models.TextField(blank=True, null=True)),
                ('species_5_count', models.FloatField(blank=True, null=True)),
                ('planted_species_6', models.TextField(blank=True, null=True)),
                ('species_6_count', models.FloatField(blank=True, null=True)),
                ('planted_species_7', models.TextField(blank=True, null=True)),
                ('species_7_count', models.FloatField(blank=True, null=True)),
                ('planted_species_8', models.TextField(blank=True, null=True)),
                ('species_8_count', models.FloatField(blank=True, null=True)),
                ('planted_species_9', models.TextField(blank=True, null=True)),
                ('species_9_count', models.FloatField(blank=True, null=True)),
                ('planted_species_10', models.TextField(blank=True, null=True)),
                ('species_count_10', models.FloatField(blank=True, null=True)),
                ('correct_species_mix', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('photo_east', models.TextField(blank=True, null=True)),
                ('photo_east_url', models.TextField(blank=True, null=True)),
                ('photo_west', models.TextField(blank=True, null=True)),
                ('photo_west_url', models.TextField(blank=True, null=True)),
                ('photo_south', models.TextField(blank=True, null=True)),
                ('photo_south_url', models.TextField(blank=True, null=True)),
                ('photo_north', models.TextField(blank=True, null=True)),
                ('photo_north_url', models.TextField(blank=True, null=True)),
                ('start_date_of_maintenance', models.DateTimeField(blank=True, null=True)),
                ('date_of_maintenance', models.DateField(blank=True, null=True)),
                ('date_of_planting', models.DateTimeField(blank=True, null=True)),
                ('end_date_of_maintenance', models.DateTimeField(blank=True, null=True)),
                ('area_qced_ha', models.FloatField(blank=True, null=True)),
                ('spacing_sph', models.TextField(blank=True, null=True)),
                ('spacing_sph1', models.TextField(blank=True, null=True)),
                ('date_planted', models.TextField(blank=True, null=True)),
                ('all_weeds_treated', models.FloatField(blank=True, null=True)),
                ('herbicide_effectivity', models.FloatField(blank=True, null=True)),
                ('number_of_planted_trees_with_fertilizer_applied', models.FloatField(blank=True, null=True)),
                ('number_of_planted_trees_with_fertilizer_applied_15cm_from_tree', models.FloatField(blank=True, null=True)),
                ('number_of_planted_trees_with_fertilizer_scorched_leaves', models.FloatField(blank=True, null=True)),
                ('number_of_planted_trees_with_covered_fertilizers', models.FloatField(blank=True, null=True)),
                ('general_slots_placement', models.TextField(blank=True, null=True)),
                ('field_uuid', models.TextField(blank=True, db_column='_uuid', null=True)),
                ('field_submission_time', models.DateTimeField(blank=True, db_column='_submission_time', null=True)),
                ('field_validation_status', models.TextField(blank=True, db_column='_validation_status', null=True)),
                ('field_notes', models.FloatField(blank=True, db_column='_notes', null=True)),
                ('field_status', models.TextField(blank=True, db_column='_status', null=True)),
                ('field_submitted_by', models.TextField(blank=True, db_column='_submitted_by', null=True)),
                ('field_version', models.TextField(blank=True, db_column='__version', null=True)),
                ('field_tags', models.FloatField(blank=True, db_column='_tags', null=True)),
                ('field_index', models.BigIntegerField(blank=True, db_column='_index', null=True)),
                ('surviving_trees', models.FloatField(blank=True, null=True)),
                ('vine_clearance_completeness', models.FloatField(blank=True, null=True)),
                ('percentage_spraying_completeness', models.FloatField(blank=True, null=True)),
                ('circle_sprayed_trees_with_green_patches_or_weed_growth_quality', models.FloatField(blank=True, null=True)),
                ('damage_to_non_target_species_quality', models.FloatField(blank=True, null=True)),
                ('chemical_weeding_accuracy', models.FloatField(blank=True, null=True)),
                ('chemical_weeding_accuracy_pass_or_fail', models.TextField(blank=True, null=True)),
                ('slashed_tree_preservation_accuracy_planted_trees', models.FloatField(blank=True, db_column='slashed_tree_preservation_accuracy__planted_trees', null=True)),
                ('slash_height_accuracy', models.FloatField(blank=True, null=True)),
                ('maintenance_slashing_accuracy', models.FloatField(blank=True, null=True)),
                ('maintenance_slashing_accuracy_passfail', models.TextField(blank=True, null=True)),
                ('ring_weeded_tree_preservation_accuracy_planted_trees', models.FloatField(blank=True, db_column='ring_weeded_tree_preservation_accuracy__planted_trees', null=True)),
                ('c_05m_radius_accuracy', models.FloatField(blank=True, null=True)),
                ('soil_disturbance_accuracy', models.FloatField(blank=True, null=True)),
                ('weeds_control_accuracy', models.FloatField(blank=True, null=True)),
                ('ring_weeding_accuracy', models.FloatField(blank=True, null=True)),
                ('ring_weeding_passfail', models.TextField(blank=True, null=True)),
                ('maintenance_qc_result', models.FloatField(blank=True, null=True)),
                ('maintenance_qc_result_pass_or_fail', models.TextField(blank=True, db_column='maintenance_qc_result__pass_or_fail', null=True)),
                ('survival', models.FloatField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'maintenance_qc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RbghCompartmentTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('fid', models.BigIntegerField(blank=True, null=True)),
                ('objectid', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('forester', models.CharField(blank=True, max_length=255, null=True)),
                ('municipality_district', models.CharField(blank=True, db_column='municipality/district', max_length=255, null=True)),
                ('iso', models.CharField(blank=True, max_length=255, null=True)),
                ('lease_no_field', models.CharField(blank=True, db_column='lease_no.', max_length=255, null=True)),
                ('blockid', models.CharField(blank=True, max_length=255, null=True)),
                ('compartment', models.CharField(blank=True, max_length=255, null=True)),
                ('subcompt', models.CharField(blank=True, max_length=255, null=True)),
                ('comptname', models.CharField(blank=True, max_length=255, null=True)),
                ('mgmtstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('comptlocal', models.CharField(blank=True, max_length=255, null=True)),
                ('totalcomptareaha', models.FloatField(blank=True, null=True)),
                ('plantedareaha', models.FloatField(blank=True, null=True)),
                ('updatedby', models.CharField(blank=True, max_length=255, null=True)),
                ('updatedate', models.DateField(blank=True, null=True)),
                ('sph', models.IntegerField(blank=True, null=True)),
                ('sph2', models.IntegerField(blank=True, null=True)),
                ('treatment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('pre_clearing_status', models.CharField(blank=True, db_column='pre-clearing_status', max_length=255, null=True)),
                ('plant_prep_date', models.DateField(blank=True, null=True)),
                ('plant_start_date', models.DateField(blank=True, null=True)),
                ('planting_completion_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.FloatField(blank=True, null=True)),
                ('fertilizer_g', models.FloatField(blank=True, null=True)),
                ('man_days', models.FloatField(blank=True, db_column='man-days', null=True)),
                ('equipment', models.CharField(blank=True, max_length=255, null=True)),
                ('equipment_days', models.FloatField(blank=True, db_column='equipment-days', null=True)),
                ('qc_date', models.DateField(blank=True, null=True)),
                ('qc_rep', models.CharField(blank=True, max_length=255, null=True)),
                ('qc_report', models.CharField(blank=True, max_length=255, null=True)),
                ('survival_pre_blanking', models.FloatField(blank=True, db_column='survival_pre-blanking', null=True)),
                ('blankingstems', models.CharField(blank=True, max_length=255, null=True)),
                ('survival_post_blanking', models.FloatField(blank=True, db_column='survival_post-blanking', null=True)),
                ('nextqcdate', models.DateField(blank=True, null=True)),
                ('nextmaintenance', models.DateField(blank=True, null=True)),
                ('regime', models.CharField(blank=True, max_length=255, null=True)),
                ('dom_species', models.CharField(blank=True, max_length=255, null=True)),
                ('soiltype', models.CharField(blank=True, max_length=255, null=True)),
                ('roadarea', models.FloatField(blank=True, null=True)),
                ('arealost', models.FloatField(blank=True, null=True)),
                ('areareclaimed', models.FloatField(blank=True, null=True)),
                ('odkuuid', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': ' RBGH_Compartment_Tracker',
                'managed': False,
            },
        ),
    ]
